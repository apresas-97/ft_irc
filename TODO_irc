
	// TODO::	define port range in Server.cpp	parseInput()

	// TODO::	Server.cpp	getClientData	...		buffer handling, message handling...
	//				checks for NULL and CRLF have been implemented... CRLF is still work in progress

	// TODO::	Server.cpp	parseData	...		parse data received from the client
	//				Everything....
	//		DONE::	Server.cpp	prepareMessage	...		since data is valid, transform into t_message....
	//				Must handle replies into the whole channel. rn it's only replying to one user

	// TODO::	Server.cpp	runCommand
	//				Set a map of function pointers with all the different functions of the commands...

	// TODO::	numeric_replies.cpp / testCmdMode ... falta el mode cuando le mandas un MODE sin argumentos
	// TODO::	... Must fix all the error return values when using commands...
	// TODO::	replies should be able to send the reply to 1 user only or to a vector of fds in order to send it to everyone needed...


	// TODO::	revisar el irc_ctype.cpp irc_isValidNickname .... also check if it's included and if it's being called somewhere....

	// TODO::	commands.cpp	cmdUser()
	//				Parse username and realname ... maybe it's enough already but must check...
	//				Reply welcome message....
	
	// TODO::	CHECK USER MODES AND CHANNEL MODES, what are we going to implement?
	// TODO::	commands.txt	CHECK WHICH COMMANDS are we going to implement....

	// TODO::	server...
	//				Save all users in a vector/stl container in the server as registered users blahblabhblah


	// TODO::	commands.cpp	cmdChanMode() ... do the whole function. it's not defined
	//				Function exists at the bottom of commands.cpp

	// TODO::	Agree on the exact method to remove a client from the server. QUIT removes the client, but we also have
	//			a client boolean to determine if its connection should be terminated in the server loop
	//			An ERROR command should be sent to the client to notify them of the termination

	// TODO::	Make sure the initial messages and their order are all handled properly.
	//			As in, handling CAP messages and their replies,

	// TODO::	Fix weird TOPIC bug

	// TODO::	JOIN:
	//			DONE - Channel name must have valid prefix or else ERR_NOSUCHCHANNEL
	//			DONE?- If user is already in the chanel, silently ignore

	// DONE::	TOPIC:
	//			- If a topic is set, do not reply with RPL_TOPIC, only with an acknowledgement like the broadcast message

	// TODO::	PRIVMSG: Only use the right parameter as the message, not all the parameters

	// TODO::	Check SEGFAULT when quitting:
	//			runCommand function called...
	//			PRIVMSG command called...
	//			Poll timed out, no activity
	//			Poll timed out, no activity
	//			After message split, size: 13
	//			parseData function called...
	//			MESSAGE RECEIVED: "QUIT :leaving"
	//			t_message: Prefix [] Command [QUIT] Params [:leaving] 
	//			Sender: [ 4 ]
	//			Targets: 

	//			runCommand function called...
	//			QUIT command called...
	//			Client removed from _poll_fds...
	//			Client removed client successfully
	//			notice_lookup.prefix: ":ft_irc.42.fr"
	//			Segmentation fault (core dumped)

	//			This seems to happen with /quit from irssi

	// TODO::	Handle when conections are lost and after a timeout, the server should remove the client

	// TODO::	Channel users should be stored in the _users map with the NICKNAME as the key, NOT THE USERNAME